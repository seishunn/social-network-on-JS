{"version":3,"file":"static/js/847.f679f4a0.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.js","webpack://soc-net/./src/components/AddItemArea/AddItemArea.module.css?da9d","components/AddItemArea/AddItemArea.js","webpack://soc-net/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://soc-net/./src/components/Dialogs/DialogItems/DialogItems.module.css?30be","components/Dialogs/DialogItems/DialogItems.js","webpack://soc-net/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.js","webpack://soc-net/./src/components/Dialogs/Messages/Messages.module.css?2673","components/Dialogs/Messages/MessagesList/MessagesList.js","webpack://soc-net/./src/components/Dialogs/Messages/MessagesUserBar/MessagesUserBar.module.css?9276","components/Dialogs/Messages/MessagesUserBar/MessagesUserBar.js","components/Dialogs/Messages/Messages.js","components/Dialogs/Messages/MessagesContainer.js","webpack://soc-net/./src/components/Dialogs/Messages/NoMessages/WithoutMessages.module.css?f959","components/Dialogs/Messages/NoMessages/WithoutMessages.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","webpack://soc-net/./src/components/TextItem/TextItem.module.css?215c","components/TextItem/TextItem.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return (\r\n                    <Navigate to={'/login'}/>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Component {...this.props}/>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"addItemInput\":\"AddItemArea_addItemInput__PqZC7\",\"scrollBar\":\"AddItemArea_scrollBar__gj14p\",\"textArea\":\"AddItemArea_textArea__NmFNC\",\"btnAdd\":\"AddItemArea_btnAdd__-WEpj\"};","import style from \"./AddItemArea.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nexport const AddItemArea = (props) => {\r\n    return (\r\n        <div className={style.addItemInput}>\r\n            <div className={style.scrollBar}>\r\n                <div className={style.textArea}>\r\n                    <Field\r\n                        validate={[required, maxLength100]}\r\n                        component={Textarea}\r\n                        name={props.name}\r\n                        placeholder={props.userName ? `Написать @${props.userName ?? \"User\"}` : \"Добавить пост\"}\r\n                        value={props.value}\r\n                    />\r\n                </div>\r\n                <button className={style.btnAdd}>\r\n                    <div>+</div>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogsPage\":\"Dialogs_dialogsPage__nfQF1\",\"dialogsSideBar\":\"Dialogs_dialogsSideBar__y3cBA\",\"dialogs\":\"Dialogs_dialogs__o6vvs\",\"newMessage\":\"Dialogs_newMessage__To0VT\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogsScroller\":\"DialogItems_dialogsScroller__bxX4g\",\"dialogs\":\"DialogItems_dialogs__VQyG7\"};","import style from \"./DialogItems.module.css\";\r\n\r\nexport const DialogItems = ({dialogs, ...props}) => {\r\n    return (\r\n        <div className={style.dialogsScroller}>\r\n            <div className={style.newMessage}>Личные сообщения</div>\r\n            <ul className={style.dialogs}>\r\n                {dialogs}\r\n            </ul>\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__41daL\",\"active\":\"Dialog_active__BQyrg\",\"avatar\":\"Dialog_avatar__BQlz+\",\"name\":\"Dialog_name__JaQwe\"};","import style from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DiscordLogo from \"../../../assets/c09a43a372ba81e3018c3151d4ed4773.png\"\r\n\r\nexport const Dialog = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <NavLink to={path} className={({isActive, ...obj}) => isActive? (`${style.dialog} ${style.active}`) : (style.dialog)}>\r\n            <div className={style.avatar}>\r\n                <img src={\r\n                    props.photos.small || props.photos.large || DiscordLogo\r\n                } alt=\"\"/>\r\n            </div>\r\n            <div className={style.name}>\r\n                {props.userName}\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"messagesPage\":\"Messages_messagesPage__5rJ0A\",\"messages\":\"Messages_messages__GKcw8\",\"addItemInput\":\"Messages_addItemInput__p0TmZ\",\"scrollBar\":\"Messages_scrollBar__MKpGR\",\"textArea\":\"Messages_textArea__Cubeg\",\"btnAdd\":\"Messages_btnAdd__PodKk\"};","import {TextItem} from \"../../../TextItem/TextItem\";\r\nimport DiscordLogo from \"../../../../assets/c09a43a372ba81e3018c3151d4ed4773.png\";\r\n\r\nexport const MessagesList = ({messages, ...props}) => {\r\n\r\n    const messagesElements = messages.map((message, index, array) => {\r\n        let image = props.authId === message.senderId? props.authAvatar : props.userAvatar;\r\n\r\n        if (index === 0) {\r\n            return (\r\n                <TextItem\r\n                    avatar={image || DiscordLogo}\r\n                    message={message.message}\r\n                    name={message.name}\r\n                    key={message.id}\r\n                    addedDate={message.addedDate}\r\n                />\r\n            )\r\n        } else {\r\n            if (array[index - 1].senderId === message.senderId) {\r\n                return (\r\n                    <TextItem\r\n                        message={message.message}\r\n                        noUser\r\n                        name={message.name}\r\n                        addedDate={message.addedDate}\r\n                        key={message.id}\r\n                    />\r\n                )\r\n            } else {\r\n                return (\r\n                    <TextItem\r\n                        avatar={image || DiscordLogo}\r\n                        message={message.message}\r\n                        name={message.name}\r\n                        addedDate={message.addedDate}\r\n                        key={message.id}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <ul>\r\n            {messagesElements}\r\n        </ul>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userName\":\"MessagesUserBar_userName__BNaux\",\"messagePreName\":\"MessagesUserBar_messagePreName__kw+e+\",\"messageName\":\"MessagesUserBar_messageName__D-0CU\",\"messageAka\":\"MessagesUserBar_messageAka__X3e0o\"};","import style from \"./MessagesUserBar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const MessagesUserBar = (props) => {\r\n    return (\r\n        <div className={style.userName}>\r\n            <div className={style.messagePreName}>@</div>\r\n            <div className={style.messageName}>{props.fullName}</div>\r\n            <div className={style.messageAka}>AKA</div>\r\n            <NavLink to={`/profile/${props.userId}`}>{props.fullName}</NavLink>\r\n        </div>\r\n    );\r\n}","import style from \"./Messages.module.css\";\r\nimport {MessagesList} from \"./MessagesList/MessagesList\";\r\nimport {MessagesUserBar} from \"./MessagesUserBar/MessagesUserBar\";\r\nimport {AddItemArea} from \"../../AddItemArea/AddItemArea\";\r\nimport DiscordLogo from \"../../../assets/c09a43a372ba81e3018c3151d4ed4773.png\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\n\r\nconst DialogForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        const user = {\r\n            authId: props.authId,\r\n            userId: props.userId,\r\n            name:props.senderName,\r\n        }\r\n        props.sendMessageToUser(user, formData.message);\r\n        formData.message = \"\";\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit(onSubmit)}>\r\n            <AddItemArea\r\n                userName={props.userName ?? \"User\"}\r\n                senderName={props.senderName}\r\n                name={\"message\"}\r\n                authId={props.authId}\r\n                userId={props.userId}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({\r\n        form: \"dialog\"\r\n})(DialogForm)\r\n\r\nexport const Messages = (props) => {\r\n    return (\r\n        <div className={style.messagesPage}>\r\n            {props.messagesIsFetching && <Preloader/>}\r\n            <MessagesUserBar fullName={props.dialog?.fullName ?? \"User\"} userId={props.dialog?.userId}/>\r\n            <div className={style.messages}>\r\n                <MessagesList\r\n                    messages={props.messages}\r\n                    userAvatar={props.dialog?.photos.small || props.dialog?.photos.large || DiscordLogo}\r\n                    authAvatar={props.profile?.photos.small || props.profile?.photos.large || DiscordLogo}\r\n                    authId={props.authId}\r\n                />\r\n            </div>\r\n            <DialogReduxForm\r\n                userName={props.dialog?.fullName ?? \"User\"}\r\n                senderName={props.profile?.fullName}\r\n                authId={props.authId}\r\n                userId={props.dialog?.userId}\r\n                sendMessageToUser={props.sendMessageToUser}\r\n            />\r\n        </div>\r\n    );\r\n}","import {\r\n    addMessageActionCreator,\r\n    sendMessageToUserThunkCreator,\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Messages} from \"./Messages\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        dialog: state.dialogsPage.dialog,\r\n        authId: state.auth.id,\r\n        profile: state.profilePage.profile,\r\n        messagesIsFetching: state.dialogsPage.messagesIsFetching\r\n    }\r\n}\r\n\r\nexport const MessagesContainer = connect(mapStateToProps, {\r\n    addItemAction: addMessageActionCreator,\r\n    sendMessageToUser: sendMessageToUserThunkCreator\r\n})(Messages);","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"WithoutMessages_main__Vw4zd\"};","import style from \"./WithoutMessages.module.css\";\r\n\r\nexport const WithoutMessages = (props) => {\r\n    return (\r\n        <div className={style.main}>Выберите чат</div>\r\n    );\r\n}","import style from \"./Dialogs.module.css\";\r\nimport {DialogItems} from \"./DialogItems/DialogItems\";\r\nimport {Dialog} from \"./Dialog/Dialog\";\r\nimport {MessagesContainer} from \"./Messages/MessagesContainer\";\r\nimport {WithoutMessages} from \"./Messages/NoMessages/WithoutMessages\";\r\n\r\nexport const Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map(dialog => <li key={dialog.id}><Dialog {...dialog}/></li>);\r\n\r\n    return (\r\n        <div className={style.dialogsPage}>\r\n            <div className={style.dialogsSideBar}>\r\n                <DialogItems dialogs={dialogsElements}/>\r\n            </div>\r\n            {\r\n                !props.params.id? <WithoutMessages/>:<MessagesContainer/>\r\n            }\r\n        </div>\r\n    );\r\n}","import {connect} from \"react-redux\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\nimport {\r\n    getDialogsThunkCreator,\r\n    getMessagesThunkCreator\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {withRouter} from \"../../HOC/withRouter\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {getUserThunkCreator} from \"../../redux/profile-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        authId: state.auth.id,\r\n        isFetching: state.dialogsPage.isFetching\r\n    }\r\n}\r\n\r\nclass DialogsContainer extends React.Component {\r\n    async componentDidMount() {\r\n        this.props.getDialogs();\r\n        if (this.props.params.id) {\r\n            this.props.getMessages(this.props.params.id);\r\n        }\r\n        await this.props.getUser(this.props.authId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.params.id !== this.props.params.id) {\r\n            this.props.getMessages(this.props.params.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isFetching) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <Dialogs {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getDialogs: getDialogsThunkCreator,\r\n        getMessages: getMessagesThunkCreator,\r\n        getUser: getUserThunkCreator,\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(DialogsContainer);","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"TextItem_item__lnLmw\",\"avatar\":\"TextItem_avatar__-D5fm\",\"text\":\"TextItem_text__I9BRV\",\"nameAndDate\":\"TextItem_nameAndDate__SxWMt\",\"userName\":\"TextItem_userName__InrHg\",\"postDate\":\"TextItem_postDate__uyFiT\",\"description\":\"TextItem_description__EuyTX\",\"noUser\":\"TextItem_noUser__FuXyC\"};","import style from './TextItem.module.css';\r\nimport DiscordLogo from \"../../assets/c09a43a372ba81e3018c3151d4ed4773.png\"\r\n\r\nconst TextItem = ({noUser, ...props}) => {\r\n    let date;\r\n    let time;\r\n\r\n    if (props.addedDate) {\r\n        date = new Date(props.addedDate);\r\n        time = `${date.getHours()}:${date.getMinutes()}`;\r\n    }\r\n    if (!noUser) {\r\n        return (\r\n            <li key={props.id}>\r\n                <div className={style.item}>\r\n                    <div className={style.avatar}>\r\n                        <img src={props?.avatar || DiscordLogo} alt=\"\"/>\r\n                    </div>\r\n                    <div className={style.text}>\r\n                        <div className={style.nameAndDate}><span\r\n                            className={style.userName}>{props?.name || \"Anonymous\"}</span> <span\r\n                            className={style.postDate}>{date ? `${date.toLocaleDateString()} ${time}` : \"\"}</span></div>\r\n                        <div className={style.description}>{props.message}</div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n\r\n        );\r\n    } else {\r\n        return (\r\n            <li>\r\n                <div className={style.noUser}>\r\n                    <div className={style.description}>{props.message}</div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport {TextItem};"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","maxLength100","maxLengthCreator","AddItemArea","className","style","Field","validate","required","component","Textarea","name","placeholder","userName","value","DialogItems","dialogs","Dialog","path","id","isActive","src","photos","small","large","DiscordLogo","alt","MessagesList","messages","messagesElements","map","message","index","array","image","authId","senderId","authAvatar","userAvatar","TextItem","avatar","addedDate","noUser","MessagesUserBar","fullName","userId","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","formData","user","senderName","sendMessageToUser","MessagesContainer","dialogsPage","dialog","profile","profilePage","messagesIsFetching","addItemAction","addMessageActionCreator","sendMessageToUserThunkCreator","Preloader","WithoutMessages","Dialogs","dialogsElements","params","DialogsContainer","getDialogs","getMessages","getUser","prevProps","prevState","snapshot","isFetching","compose","getDialogsThunkCreator","getMessagesThunkCreator","getUserThunkCreator","withRouter","date","time","Date","getHours","getMinutes","toLocaleDateString"],"sourceRoot":""}